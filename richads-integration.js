/**
 * RichAds Integration –¥–ª—è Magnum Stars Bot
 * –ó–∞–º–µ–Ω—è–µ—Ç —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è –Ω–∞ RichAds –æ—Ñ—Ñ–µ—Ä—ã
 */

const axios = require('axios');
const config = require('./config/constants');
const logger = require('./utils/logger');

class RichAdsIntegration {
  constructor() {
    this.apiKey = config.RICHADS_API_KEY || '6d0734893c941affcca49d54e05193da';
    this.apiUrl = config.RICHADS_API_URL;
    this.publisherId = config.RICHADS_PUBLISHER_ID || '982065';
    this.siteId = config.RICHADS_SITE_ID || 'demo';
    this.offers = [];
    this.lastUpdate = null;
    this.updateInterval = 30 * 60 * 1000; // 30 –º–∏–Ω—É—Ç
    
    logger.info('RichAds –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞', {
      apiUrl: this.apiUrl,
      hasApiKey: !!this.apiKey,
      publisherId: this.publisherId,
      siteId: this.siteId
    });
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤ –æ—Ç RichAds
  async getOffers() {
    try {
      if (!this.apiKey) {
        logger.warn('RICHADS_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–æ—Ñ—Ñ–µ—Ä—ã');
        return this.getDemoOffers();
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ–±–Ω–æ–≤–∏—Ç—å –∫–µ—à
      if (this.offers.length > 0 && this.lastUpdate && 
          (Date.now() - this.lastUpdate) < this.updateInterval) {
        logger.debug('–í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫—ç—à–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ—Ñ—Ñ–µ—Ä—ã RichAds');
        return this.offers;
      }

      logger.info('–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤ RichAds...');

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –¥–ª—è RichAds API —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
      const response = await axios.get(`${this.apiUrl}`, {
        params: {
          ip: '93.195.225.194', // IP –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏)
          useragent: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36',
          pubid: this.publisherId,
          siteid: this.siteId,
          'source-type': '1',
          api_key: this.apiKey
        },
        timeout: config.API_TIMEOUT,
        headers: {
          'Content-Type': 'application/json',
          'Accept': 'application/json'
        }
      });

      logger.debug('RichAds API –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω', {
        status: response.status,
        dataLength: response.data?.length || 0
      });

      if (response.data && response.data.length > 0) {
        // –ü–∞—Ä—Å–∏–º JSON –æ—Ç–≤–µ—Ç
        const offers = this.parseJSONOffers(response.data);
        this.offers = this.formatOffers(offers);
        this.lastUpdate = Date.now();
        logger.info(`–ü–æ–ª—É—á–µ–Ω–æ ${this.offers.length} –æ—Ñ—Ñ–µ—Ä–æ–≤ RichAds`);
        return this.offers;
      } else {
        // –ï—Å–ª–∏ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–æ—Ñ—Ñ–µ—Ä—ã
        logger.warn('RichAds API –Ω–µ –≤–µ—Ä–Ω—É–ª –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–æ—Ñ—Ñ–µ—Ä—ã');
        return this.getDemoOffers();
      }

      return [];
    } catch (error) {
      logger.apiError('RichAds', error, {
        apiUrl: this.apiUrl,
        publisherId: this.publisherId,
        siteId: this.siteId
      });
      
      // –ï—Å–ª–∏ —Å—Ç–∞—Ç—É—Å 204 (No Content), —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è RichAds
      if (error.response?.status === 204) {
        logger.info('RichAds API –≤–µ—Ä–Ω—É–ª 204 (No Content), –∏—Å–ø–æ–ª—å–∑—É–µ–º –¥–µ–º–æ-–æ—Ñ—Ñ–µ—Ä—ã');
        return this.getDemoOffers();
      }
      
      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–æ—Ñ—Ñ–µ—Ä—ã –µ—Å–ª–∏ API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
      logger.warn('–í–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ–º–æ-–æ—Ñ—Ñ–µ—Ä—ã –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ API');
      return this.getDemoOffers();
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤ –¥–ª—è –±–æ—Ç–∞
  formatOffers(offers) {
    return offers.map((offer, index) => ({
      id: offer.id || `richads_${index + 1}`,
      title: offer.title || `–û—Ñ—Ñ–µ—Ä ${index + 1}`,
      description: offer.description || '–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É',
      reward: this.calculateReward(offer.payout || 0.1),
      rewardType: 'stars',
      difficulty: this.getDifficulty(offer.payout || 0.1),
      estimatedTime: this.getEstimatedTime(offer.estimated_time || 5),
      url: offer.tracking_url || offer.url,
      requirements: this.parseRequirements(offer.requirements || ''),
      category: offer.category || 'social',
      payout: offer.payout || 0.1,
      country: offer.country || 'RU',
      isRichAds: true
    }));
  }

  // –†–∞—Å—á–µ—Ç –Ω–∞–≥—Ä–∞–¥—ã –≤ Stars
  calculateReward(payout) {
    // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –¥–æ–ª–ª–∞—Ä—ã –≤ Stars (–ø—Ä–∏–º–µ—Ä–Ω—ã–π –∫—É—Ä—Å)
    const starsPerDollar = 100; // 1$ = 100 Stars
    return Math.round(payout * starsPerDollar * 100) / 100;
  }

  // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–¥–∞–Ω–∏—è
  getDifficulty(payout) {
    if (payout >= 0.5) return 'üî• –°–ª–æ–∂–Ω–æ–µ';
    if (payout >= 0.2) return '‚≠ê –°—Ä–µ–¥–Ω–µ–µ';
    return '‚≠ê –õ–µ–≥–∫–æ–µ';
  }

  // –û—Ü–µ–Ω–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
  getEstimatedTime(minutes) {
    if (minutes <= 2) return '2 –º–∏–Ω—É—Ç—ã';
    if (minutes <= 5) return '5 –º–∏–Ω—É—Ç';
    if (minutes <= 10) return '10 –º–∏–Ω—É—Ç';
    return `${minutes} –º–∏–Ω—É—Ç`;
  }

  // –ü–∞—Ä—Å–∏–Ω–≥ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
  parseRequirements(requirements) {
    if (!requirements) return ['–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ', '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç'];
    
    const reqs = requirements.split('\n').filter(r => r.trim());
    if (reqs.length === 0) {
      return ['–í—ã–ø–æ–ª–Ω–∏—Ç–µ –∑–∞–¥–∞–Ω–∏–µ', '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç'];
    }
    
    return reqs.slice(0, 3); // –ú–∞–∫—Å–∏–º—É–º 3 —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
  }

  // –ü–∞—Ä—Å–∏–Ω–≥ JSON –æ—Ñ—Ñ–µ—Ä–æ–≤ –æ—Ç RichAds
  parseJSONOffers(jsonData) {
    try {
      let data;
      
      // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
      if (typeof jsonData === 'string') {
        data = JSON.parse(jsonData);
      } else {
        data = jsonData;
      }
      
      const offers = [];
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç–∞
      if (data.offers && Array.isArray(data.offers)) {
        offers.push(...data.offers);
      } else if (data.data && Array.isArray(data.data)) {
        offers.push(...data.data);
      } else if (Array.isArray(data)) {
        offers.push(...data);
      } else if (data.offer) {
        offers.push(data.offer);
      } else if (data.offers && typeof data.offers === 'object') {
        // –ï—Å–ª–∏ offers —ç—Ç–æ –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ –º–∞—Å—Å–∏–≤
        Object.keys(data.offers).forEach(key => {
          offers.push({ id: key, ...data.offers[key] });
        });
      }
      
      console.log(`üìã –ü–∞—Ä—Å–∏—Ä–æ–≤–∞–Ω–æ ${offers.length} –æ—Ñ—Ñ–µ—Ä–æ–≤ –∏–∑ JSON`);
      return offers;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON –æ—Ñ—Ñ–µ—Ä–æ–≤:', error);
      console.log('üìä –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', jsonData);
      return [];
    }
  }

  // –î–µ–º–æ-–æ—Ñ—Ñ–µ—Ä—ã –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  getDemoOffers() {
    return [
      {
        id: 'richads_demo_1',
        title: '–ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Telegram –∫–∞–Ω–∞–ª',
        description: '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É',
        reward: 50,
        rewardType: 'stars',
        difficulty: '‚≠ê –õ–µ–≥–∫–æ–µ',
        estimatedTime: '2 –º–∏–Ω—É—Ç—ã',
        url: 'https://t.me/demo_channel',
        requirements: [
          '–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª',
          '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –ø–æ–¥–ø–∏—Å–∫–∏'
        ],
        category: 'social',
        payout: 0.5,
        country: 'RU',
        isRichAds: true
      },
      {
        id: 'richads_demo_2',
        title: '–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è',
        description: '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É',
        reward: 100,
        rewardType: 'stars',
        difficulty: '‚≠ê –°—Ä–µ–¥–Ω–µ–µ',
        estimatedTime: '5 –º–∏–Ω—É—Ç',
        url: 'https://play.google.com/store/apps/details?id=com.demo.app',
        requirements: [
          '–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ',
          '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏'
        ],
        category: 'mobile',
        payout: 1.0,
        country: 'RU',
        isRichAds: true
      },
      {
        id: 'richads_demo_3',
        title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ —Å–∞–π—Ç–µ',
        description: '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ –∏ –ø–æ–ª—É—á–∏—Ç–µ –Ω–∞–≥—Ä–∞–¥—É',
        reward: 75,
        rewardType: 'stars',
        difficulty: '‚≠ê –°—Ä–µ–¥–Ω–µ–µ',
        estimatedTime: '3 –º–∏–Ω—É—Ç—ã',
        url: 'https://demo-site.com/register',
        requirements: [
          '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–∞–π—Ç–µ',
          '–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏'
        ],
        category: 'registration',
        payout: 0.75,
        country: 'RU',
        isRichAds: true
      }
    ];
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –æ—Ñ—Ñ–µ—Ä–∞
  async verifyOffer(offerId, userId) {
    try {
      if (!this.apiKey) {
        console.log('‚ö†Ô∏è RICHADS_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏');
        return { success: true, verified: true }; // –î–µ–º–æ-—Ä–µ–∂–∏–º
      }

      // –î–ª—è RichAds –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –ø—Ä–æ–≤–µ—Ä–∫—É
      // –í —Ä–µ–∞–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤
      console.log(`‚úÖ –í–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ñ—Ñ–µ—Ä–∞ ${offerId} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
      
      return {
        success: true,
        verified: true,
        message: '–û—Ñ—Ñ–µ—Ä –ø—Ä–æ–≤–µ—Ä–µ–Ω'
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤–µ—Ä–∏—Ñ–∏–∫–∞—Ü–∏–∏ –æ—Ñ—Ñ–µ—Ä–∞:', error.message);
      return {
        success: false,
        verified: false,
        message: '–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ñ—Ñ–µ—Ä–∞'
      };
    }
  }

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
  async sendConversion(offerId, userId, amount = 1) {
    try {
      if (!this.apiKey) {
        console.log('‚ö†Ô∏è RICHADS_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Å–∏–∏');
        return { success: true }; // –î–µ–º–æ-—Ä–µ–∂–∏–º
      }

      // –î–ª—è RichAds –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–æ—Å—Ç—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
      // –í —Ä–µ–∞–ª—å–Ω–æ–π –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤
      console.log(`‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏ –¥–ª—è –æ—Ñ—Ñ–µ—Ä–∞ ${offerId}, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ ${amount}`);
      
      return {
        success: true,
        conversion_id: `conv_${Date.now()}_${userId}`
      };
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏:', error.message);
      return {
        success: false,
        message: '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏'
      };
    }
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async getUserStats(userId) {
    try {
      if (!this.apiKey) {
        return {
          total_offers: 0,
          total_earnings: 0,
          completed_offers: 0
        };
      }

      const response = await axios.get(`${this.apiUrl}/users/${userId}/stats`, {
        headers: {
          'Authorization': `Bearer ${this.apiKey}`,
          'Content-Type': 'application/json'
        }
      });

      return response.data;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', error.message);
      return {
        total_offers: 0,
        total_earnings: 0,
        completed_offers: 0
      };
    }
  }
}

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
const richAdsIntegration = new RichAdsIntegration();

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –±–æ—Ç–µ
module.exports = {
  richAdsIntegration,
  
  // –ü–æ–ª—É—á–µ–Ω–∏–µ –æ—Ñ—Ñ–µ—Ä–æ–≤
  async getRichAdsOffers() {
    return await richAdsIntegration.getOffers();
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ñ—Ñ–µ—Ä–∞
  async verifyRichAdsOffer(offerId, userId) {
    return await richAdsIntegration.verifyOffer(offerId, userId);
  },

  // –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–æ–Ω–≤–µ—Ä—Å–∏–∏
  async sendRichAdsConversion(offerId, userId, amount) {
    return await richAdsIntegration.sendConversion(offerId, userId, amount);
  },

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  async getRichAdsUserStats(userId) {
    return await richAdsIntegration.getUserStats(userId);
  },

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ RichAds
  isRichAdsAvailable() {
    return !!process.env.RICHADS_API_KEY;
  }
};

const config = require('./config');
const database = require('./database');
const cache = require('./cache');
const utils = require('./utils');
const userService = require('./services/userService');

async function runTests() {
  console.log('üß™ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –±–æ—Ç–∞...\n');

  try {
    // –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    console.log('üìã –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏');
    console.log('‚úÖ BOT_TOKEN:', config.BOT_TOKEN ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
    console.log('‚úÖ MONGODB_URI:', config.MONGODB_URI ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–ù–ï –£–°–¢–ê–ù–û–í–õ–ï–ù');
    console.log('‚úÖ USER_CACHE_TTL:', config.USER_CACHE_TTL, '–º—Å');
    console.log('‚úÖ RATE_LIMIT_MAX_REQUESTS:', config.RATE_LIMIT_MAX_REQUESTS);
    console.log('‚úÖ EXCHANGE_COMMISSION:', config.EXCHANGE_COMMISSION + '%');
    console.log('‚úÖ MINER_REWARD_PER_HOUR:', config.MINER_REWARD_PER_HOUR, '‚≠ê/—á–∞—Å\n');

    // –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç
    console.log('üîß –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Ç–∏–ª–∏—Ç');
    console.log('‚úÖ formatNumber(1234):', utils.formatNumber(1234));
    console.log('‚úÖ formatNumber(1000000):', utils.formatNumber(1000000));
    console.log('‚úÖ calculateCommission(100):', utils.calculateCommission(100));
    console.log('‚úÖ calculateAmountWithCommission(100):', utils.calculateAmountWithCommission(100));
    console.log('‚úÖ checkCooldown(0, 10):', utils.checkCooldown(0, 10));
    console.log('‚úÖ validatePromocode("TEST123"):', utils.validatePromocode("TEST123"));
    console.log('‚úÖ validateAmount(50, 0, 100):', utils.validateAmount(50, 0, 100));
    console.log('‚úÖ formatTime(3661):', utils.formatTime(3661));
    console.log('‚úÖ now():', utils.now());
    console.log('‚úÖ isAdmin("123"):', utils.isAdmin("123"));
    console.log('‚úÖ isAdmin(config.ADMIN_IDS[0]):', config.ADMIN_IDS.length > 0 ? utils.isAdmin(config.ADMIN_IDS[0]) : '–Ω–µ—Ç –∞–¥–º–∏–Ω–æ–≤\n');

    // –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞
    console.log('üíæ –¢–µ—Å—Ç 3: –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–µ—à–∞');
    const testUserId = 123456789;
    const testUser = { id: testUserId, name: 'Test User', balance: 1000 };
    
    cache.setUser(testUserId, testUser);
    const cachedUser = cache.getUser(testUserId);
    console.log('‚úÖ setUser/getUser:', cachedUser ? '—Ä–∞–±–æ—Ç–∞–µ—Ç' : '–û–®–ò–ë–ö–ê');
    console.log('‚úÖ cachedUser.name:', cachedUser?.name);
    
    cache.invalidateUser(testUserId);
    const invalidatedUser = cache.getUser(testUserId);
    console.log('‚úÖ invalidateUser:', invalidatedUser ? '–û–®–ò–ë–ö–ê' : '—Ä–∞–±–æ—Ç–∞–µ—Ç');
    
    const cacheStats = cache.getCacheStats();
    console.log('‚úÖ getCacheStats:', cacheStats.userCacheSize, '–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –∫–µ—à–µ');
    console.log('‚úÖ rateLimitCacheSize:', cacheStats.rateLimitCacheSize);
    console.log('‚úÖ memoryUsage:', Math.round(cacheStats.memoryUsage.heapUsed / 1024 / 1024), 'MB\n');

    // –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting
    console.log('üö¶ –¢–µ—Å—Ç 4: –ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting');
    const testUserId2 = 987654321;
    let rateLimitResults = [];
    
    for (let i = 0; i < 35; i++) {
      rateLimitResults.push(cache.checkRateLimit(testUserId2));
    }
    
    const allowedRequests = rateLimitResults.filter(r => r).length;
    const blockedRequests = rateLimitResults.filter(r => !r).length;
    console.log('‚úÖ Rate limiting:', allowedRequests, '—Ä–∞–∑—Ä–µ—à–µ–Ω–æ,', blockedRequests, '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ');
    console.log('‚úÖ –û–∂–∏–¥–∞–µ–º–æ:', config.RATE_LIMIT_MAX_REQUESTS, '—Ä–∞–∑—Ä–µ—à–µ–Ω–æ,', 35 - config.RATE_LIMIT_MAX_REQUESTS, '–∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–æ\n');

    // –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤
    console.log('üßÆ –¢–µ—Å—Ç 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞—Å—á–µ—Ç–æ–≤');
    const testReserve = { magnumCoins: 1000000, stars: 1000000 };
    const magnumToStarsRate = utils.calculateExchangeRate('magnumCoins', 'stars', testReserve);
    const starsToMagnumRate = utils.calculateExchangeRate('stars', 'magnumCoins', testReserve);
    console.log('‚úÖ magnumToStarsRate:', magnumToStarsRate);
    console.log('‚úÖ starsToMagnumRate:', starsToMagnumRate);
    console.log('‚úÖ calculateMinerReward():', utils.calculateMinerReward());
    
    const testUserForReward = { achievements: [], titles: [] };
    const farmReward = utils.calculateFarmReward(testUserForReward);
    console.log('‚úÖ calculateFarmReward():', farmReward);
    
    const progressBar = utils.createProgressBar(7, 10, 10);
    console.log('‚úÖ createProgressBar(7, 10, 10):', progressBar, '(7/10)\n');

    // –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏
    console.log('‚úÖ –¢–µ—Å—Ç 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏');
    console.log('‚úÖ validatePromocode("ABC123"):', utils.validatePromocode("ABC123"));
    console.log('‚úÖ validatePromocode("A"):', utils.validatePromocode("A")); // —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π
    console.log('‚úÖ validatePromocode("ABC@123"):', utils.validatePromocode("ABC@123")); // –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã
    console.log('‚úÖ validateAmount(50):', utils.validateAmount(50));
    console.log('‚úÖ validateAmount(-10):', utils.validateAmount(-10)); // –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–µ
    console.log('‚úÖ validateAmount(150, 0, 100):', utils.validateAmount(150, 0, 100)); // –ø—Ä–µ–≤—ã—à–∞–µ—Ç –º–∞–∫—Å–∏–º—É–º\n');

    // –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    console.log('‚ö†Ô∏è –¢–µ—Å—Ç 7: –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫');
    const errorResult = utils.handleError(new Error('–¢–µ—Å—Ç–æ–≤–∞—è –æ—à–∏–±–∫–∞'), '—Ç–µ—Å—Ç');
    console.log('‚úÖ handleError:', errorResult.success ? '–û–®–ò–ë–ö–ê' : '—Ä–∞–±–æ—Ç–∞–µ—Ç');
    console.log('‚úÖ errorResult.error:', errorResult.error);
    
    const successResult = utils.success({ data: 'test' });
    console.log('‚úÖ success:', successResult.success ? '—Ä–∞–±–æ—Ç–∞–µ—Ç' : '–û–®–ò–ë–ö–ê');
    console.log('‚úÖ successResult.data:', successResult.data);

    console.log('\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    console.log('üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–µ—à–∞:', cache.getCacheStats());

  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–∞—Ö:', error);
    console.error('üìç Stack trace:', error.stack);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç—ã —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω –Ω–∞–ø—Ä—è–º—É—é
if (require.main === module) {
  runTests().then(() => {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ');
    process.exit(0);
  }).catch(error => {
    console.error('\n‚ùå –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å —Å –æ—à–∏–±–∫–æ–π:', error);
    process.exit(1);
  });
}

module.exports = { runTests };
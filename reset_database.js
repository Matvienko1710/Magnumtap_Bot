const { MongoClient } = require('mongodb');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB
const MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/test';

async function resetDatabase() {
  const client = new MongoClient(MONGODB_URI);
  
  try {
    console.log('üîó –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ MongoDB...');
    await client.connect();
    
    const db = client.db();
    console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
    const collections = await db.listCollections().toArray();
    console.log(`üìã –ù–∞–π–¥–µ–Ω–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: ${collections.length}`);
    
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    for (const collection of collections) {
      console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏: ${collection.name}`);
      await db.collection(collection.name).drop();
    }
    
    console.log('‚úÖ –í—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã');
    
    // –°–æ–∑–¥–∞–µ–º –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    console.log('üìã –°–æ–∑–¥–∞–Ω–∏–µ –≤—Å–µ—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π...');
    
    // 1. –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–æ—Å–Ω–æ–≤–Ω–∞—è)
    await db.createCollection('users');
    await db.collection('users').createIndex({ id: 1 }, { unique: true });
    await db.collection('users').createIndex({ username: 1 });
    await db.collection('users').createIndex({ 'miner.active': 1 });
    await db.collection('users').createIndex({ lastSeen: -1 });
    await db.collection('users').createIndex({ referrerId: 1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è users —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 2. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–∞ –±–∏—Ä–∂–∏
    await db.createCollection('reserve');
    await db.collection('reserve').createIndex({ currency: 1 }, { unique: true });
    await db.collection('reserve').insertOne({
      currency: 'main',
      magnumCoins: 1000000000,
      stars: 1000000,
      lastUpdate: new Date()
    });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è reserve —Å–æ–∑–¥–∞–Ω–∞ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');
    
    // 3. –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—Ä–æ–º–æ–∫–æ–¥–æ–≤
    await db.createCollection('promocodes');
    await db.collection('promocodes').createIndex({ code: 1 }, { unique: true });
    await db.collection('promocodes').createIndex({ isActive: 1 });
    await db.collection('promocodes').createIndex({ expiresAt: 1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è promocodes —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 4. –ö–æ–ª–ª–µ–∫—Ü–∏—è –∑–∞—è–≤–æ–∫ –Ω–∞ –≤—ã–≤–æ–¥
    await db.createCollection('withdrawalRequests');
    await db.collection('withdrawalRequests').createIndex({ userId: 1 });
    await db.collection('withdrawalRequests').createIndex({ status: 1 });
    await db.collection('withdrawalRequests').createIndex({ createdAt: -1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è withdrawalRequests —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 5. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ç–∏–∫–µ—Ç–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∫–∏
    await db.createCollection('supportTickets');
    await db.collection('supportTickets').createIndex({ userId: 1 });
    await db.collection('supportTickets').createIndex({ status: 1 });
    await db.collection('supportTickets').createIndex({ createdAt: -1 });
    await db.collection('supportTickets').createIndex({ id: 1 }, { unique: true });
    await db.collection('supportTickets').createIndex({ adminId: 1 });
    await db.collection('supportTickets').createIndex({ updatedAt: -1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è supportTickets —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 6. –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–æ–∫ –∑–∞–¥–∞–Ω–∏–π
    await db.createCollection('taskChecks');
    await db.collection('taskChecks').createIndex({ userId: 1 });
    await db.collection('taskChecks').createIndex({ status: 1 });
    await db.collection('taskChecks').createIndex({ createdAt: -1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è taskChecks —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 7. –ö–æ–ª–ª–µ–∫—Ü–∏—è –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏–π
    await db.createCollection('dailyTasks');
    await db.collection('dailyTasks').createIndex({ userId: 1 });
    await db.collection('dailyTasks').createIndex({ date: 1 });
    await db.collection('dailyTasks').createIndex({ completed: 1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è dailyTasks —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 8. –ö–æ–ª–ª–µ–∫—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–º–µ–Ω–æ–≤
    await db.createCollection('exchangeHistory');
    await db.collection('exchangeHistory').createIndex({ userId: 1 });
    await db.collection('exchangeHistory').createIndex({ timestamp: -1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è exchangeHistory —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 9. –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π WebApp
    await db.createCollection('webappUsers');
    await db.collection('webappUsers').createIndex({ userId: 1 }, { unique: true });
    await db.collection('webappUsers').createIndex({ updatedAt: -1 });
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è webappUsers —Å–æ–∑–¥–∞–Ω–∞ —Å –∏–Ω–¥–µ–∫—Å–∞–º–∏');
    
    // 10. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –º–∞–π–Ω–∏–Ω–≥–∞
    await db.createCollection('miningSeasonStats');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è miningSeasonStats —Å–æ–∑–¥–∞–Ω–∞');
    
    // 11. –ö–æ–ª–ª–µ–∫—Ü–∏—è –Ω–∞–≥—Ä–∞–¥ –º–∞–π–Ω–µ—Ä–∞
    await db.createCollection('minerRewards');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è minerRewards —Å–æ–∑–¥–∞–Ω–∞');
    
    // 12. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å–ø–æ–Ω—Å–æ—Ä—Å–∫–∏—Ö –∑–∞–¥–∞–Ω–∏–π
    await db.createCollection('sponsorTasks');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è sponsorTasks —Å–æ–∑–¥–∞–Ω–∞');
    
    // 13. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await db.createCollection('userStats');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è userStats —Å–æ–∑–¥–∞–Ω–∞');
    
    // 14. –ö–æ–ª–ª–µ–∫—Ü–∏—è –ª–æ–≥–æ–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    await db.createCollection('adminLogs');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è adminLogs —Å–æ–∑–¥–∞–Ω–∞');
    
    // 15. –ö–æ–ª–ª–µ–∫—Ü–∏—è –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫
    await db.createCollection('errorLogs');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è errorLogs —Å–æ–∑–¥–∞–Ω–∞');
    
    // 16. –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    await db.createCollection('config');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è config —Å–æ–∑–¥–∞–Ω–∞');
    
    // 17. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –±–æ—Ç–∞
    await db.createCollection('botStats');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è botStats —Å–æ–∑–¥–∞–Ω–∞');
    
    // 18. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    await db.createCollection('transactions');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è transactions —Å–æ–∑–¥–∞–Ω–∞');
    
    // 19. –ö–æ–ª–ª–µ–∫—Ü–∏—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
    await db.createCollection('achievements');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è achievements —Å–æ–∑–¥–∞–Ω–∞');
    
    // 20. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ä–∞–Ω–≥–æ–≤
    await db.createCollection('ranks');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è ranks —Å–æ–∑–¥–∞–Ω–∞');
    
    // 21. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ç–∏—Ç—É–ª–æ–≤
    await db.createCollection('titles');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è titles —Å–æ–∑–¥–∞–Ω–∞');
    
    // 22. –ö–æ–ª–ª–µ–∫—Ü–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    await db.createCollection('notifications');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è notifications —Å–æ–∑–¥–∞–Ω–∞');
    
    // 23. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å–µ–∑–æ–Ω–æ–≤ –º–∞–π–Ω–∏–Ω–≥–∞
    await db.createCollection('miningSeasons');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è miningSeasons —Å–æ–∑–¥–∞–Ω–∞');
    
    // 24. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Ä–µ–π—Ç–∏–Ω–≥–æ–≤ –º–∞–π–Ω–∏–Ω–≥–∞
    await db.createCollection('miningLeaderboards');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è miningLeaderboards —Å–æ–∑–¥–∞–Ω–∞');
    
    // 25. –ö–æ–ª–ª–µ–∫—Ü–∏—è –º–∞–≥–∞–∑–∏–Ω–∞ –º–∞–π–Ω–µ—Ä–æ–≤
    await db.createCollection('minerShop');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è minerShop —Å–æ–∑–¥–∞–Ω–∞');
    
    // 26. –ö–æ–ª–ª–µ–∫—Ü–∏—è –ø–æ–∫—É–ø–æ–∫ –º–∞–π–Ω–µ—Ä–æ–≤
    await db.createCollection('minerPurchases');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è minerPurchases —Å–æ–∑–¥–∞–Ω–∞');
    
    // 27. –ö–æ–ª–ª–µ–∫—Ü–∏—è —É–ª—É—á—à–µ–Ω–∏–π –º–∞–π–Ω–µ—Ä–æ–≤
    await db.createCollection('minerUpgrades');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è minerUpgrades —Å–æ–∑–¥–∞–Ω–∞');
    
    // 28. –ö–æ–ª–ª–µ–∫—Ü–∏—è –Ω–∞–≥—Ä–∞–¥ —Å–µ–∑–æ–Ω–æ–≤
    await db.createCollection('seasonRewards');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è seasonRewards —Å–æ–∑–¥–∞–Ω–∞');
    
    // 29. –ö–æ–ª–ª–µ–∫—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –º–∞–π–Ω–∏–Ω–≥–∞
    await db.createCollection('miningHistory');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è miningHistory —Å–æ–∑–¥–∞–Ω–∞');
    
    // 30. –ö–æ–ª–ª–µ–∫—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    await db.createCollection('userSettings');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è userSettings —Å–æ–∑–¥–∞–Ω–∞');
    
    // 31. –ö–æ–ª–ª–µ–∫—Ü–∏—è –∫–µ—à–∞
    await db.createCollection('cache');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è cache —Å–æ–∑–¥–∞–Ω–∞');
    
    // 32. –ö–æ–ª–ª–µ–∫—Ü–∏—è —Å–µ—Å—Å–∏–π
    await db.createCollection('sessions');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è sessions —Å–æ–∑–¥–∞–Ω–∞');
    
    // 33. –ö–æ–ª–ª–µ–∫—Ü–∏—è API –∫–ª—é—á–µ–π
    await db.createCollection('apiKeys');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è apiKeys —Å–æ–∑–¥–∞–Ω–∞');
    
    // 34. –ö–æ–ª–ª–µ–∫—Ü–∏—è –≤–µ–±—Ö—É–∫–æ–≤
    await db.createCollection('webhooks');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è webhooks —Å–æ–∑–¥–∞–Ω–∞');
    
    // 35. –ö–æ–ª–ª–µ–∫—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    await db.createCollection('analytics');
    console.log('‚úÖ –ö–æ–ª–ª–µ–∫—Ü–∏—è analytics —Å–æ–∑–¥–∞–Ω–∞');
    
    console.log('üéâ –í—Å–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!');
    console.log('üìä –í—Å–µ–≥–æ —Å–æ–∑–¥–∞–Ω–æ –∫–æ–ª–ª–µ–∫—Ü–∏–π: 35');
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error);
  } finally {
    await client.close();
    console.log('üîå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–æ');
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–±—Ä–æ—Å –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
resetDatabase();

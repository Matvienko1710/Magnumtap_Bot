// –°–∫—Ä–∏–ø—Ç –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π –ø–æ–ª–µ–π Magnum Coins
const { MongoClient } = require('mongodb');
require('dotenv').config();

async function migrateDatabase() {
    const client = new MongoClient(process.env.MONGODB_URI);

    try {
        await client.connect();
        const db = client.db();

        console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...\n');

        // 1. –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        console.log('üë• –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        const usersCollection = db.collection('users');

        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –ø–æ–ª—è–º–∏
        const usersWithOldFields = await usersCollection.find({
            $or: [
                { magnuStarsoins: { $exists: true } },
                { totalEarnedMagnuStarsoins: { $exists: true } },
                { totalWithdrawnMagnuStarsoins: { $exists: true } }
            ]
        }).toArray();

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: ${usersWithOldFields.length}`);

        for (const user of usersWithOldFields) {
            const updateData = {};

            // –ü–µ—Ä–µ–Ω–æ—Å–∏–º –∑–Ω–∞—á–µ–Ω–∏—è –∏–∑ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π –≤ –Ω–æ–≤—ã–µ
            if (user.magnuStarsoins !== undefined) {
                updateData.magnumCoins = user.magnuStarsoins;
                updateData.$unset = { ...updateData.$unset, magnuStarsoins: 1 };
            }

            if (user.totalEarnedMagnuStarsoins !== undefined) {
                updateData.totalEarnedMagnumCoins = user.totalEarnedMagnuStarsoins;
                updateData.$unset = { ...updateData.$unset, totalEarnedMagnuStarsoins: 1 };
            }

            if (user.totalWithdrawnMagnuStarsoins !== undefined) {
                updateData.totalWithdrawnMagnumCoins = user.totalWithdrawnMagnuStarsoins;
                updateData.$unset = { ...updateData.$unset, totalWithdrawnMagnuStarsoins: 1 };
            }

            if (Object.keys(updateData).length > 0) {
                await usersCollection.updateOne(
                    { _id: user._id },
                    updateData
                );
                console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.id || user._id}`);
            }
        }

        // 2. –ú–∏–≥—Ä–∞—Ü–∏—è WebApp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        console.log('\nüåê –ú–∏–≥—Ä–∞—Ü–∏—è WebApp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
        const webappUsersCollection = db.collection('webappUsers');

        const webappUsersWithOldFields = await webappUsersCollection.find({
            $or: [
                { magnuStarsoins: { $exists: true } },
                { totalEarnedMagnuStarsoins: { $exists: true } },
                { totalWithdrawnMagnuStarsoins: { $exists: true } }
            ]
        }).toArray();

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ WebApp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: ${webappUsersWithOldFields.length}`);

        for (const user of webappUsersWithOldFields) {
            const updateData = {};

            if (user.magnuStarsoins !== undefined) {
                updateData.magnumCoins = user.magnuStarsoins;
                updateData.$unset = { ...updateData.$unset, magnuStarsoins: 1 };
            }

            if (user.totalEarnedMagnuStarsoins !== undefined) {
                updateData.totalEarnedMagnumCoins = user.totalEarnedMagnuStarsoins;
                updateData.$unset = { ...updateData.$unset, totalEarnedMagnuStarsoins: 1 };
            }

            if (user.totalWithdrawnMagnuStarsoins !== undefined) {
                updateData.totalWithdrawnMagnumCoins = user.totalWithdrawnMagnuStarsoins;
                updateData.$unset = { ...updateData.$unset, totalWithdrawnMagnuStarsoins: 1 };
            }

            if (Object.keys(updateData).length > 0) {
                await webappUsersCollection.updateOne(
                    { _id: user._id },
                    updateData
                );
                console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω WebApp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${user.userId || user._id}`);
            }
        }

        // 3. –ú–∏–≥—Ä–∞—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–∞ –≤–∞–ª—é—Ç
        console.log('\nüè¶ –ú–∏–≥—Ä–∞—Ü–∏—è —Ä–µ–∑–µ—Ä–≤–∞ –≤–∞–ª—é—Ç...');
        const reserveCollection = db.collection('reserve');

        const reservesWithOldFields = await reserveCollection.find({
            $or: [
                { magnuStarsoins: { $exists: true } }
            ]
        }).toArray();

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑–µ—Ä–≤–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: ${reservesWithOldFields.length}`);

        for (const reserve of reservesWithOldFields) {
            const updateData = {};

            if (reserve.magnuStarsoins !== undefined) {
                updateData.magnumCoins = reserve.magnuStarsoins;
                updateData.$unset = { ...updateData.$unset, magnuStarsoins: 1 };
            }

            if (Object.keys(updateData).length > 0) {
                await reserveCollection.updateOne(
                    { _id: reserve._id },
                    updateData
                );
                console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω —Ä–µ–∑–µ—Ä–≤ ${reserve.currency || reserve._id}`);
            }
        }

        // 4. –ú–∏–≥—Ä–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–º–µ–Ω–æ–≤
        console.log('\nüí± –ú–∏–≥—Ä–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–º–µ–Ω–æ–≤...');
        const exchangeHistoryCollection = db.collection('exchangeHistory');

        const exchangeHistoryWithOldFields = await exchangeHistoryCollection.find({
            $or: [
                { magnuStarsoinsAmount: { $exists: true } },
                { magnuStarsoinsReceived: { $exists: true } }
            ]
        }).toArray();

        console.log(`üìä –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–º–µ–Ω–æ–≤ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏: ${exchangeHistoryWithOldFields.length}`);

        for (const exchange of exchangeHistoryWithOldFields) {
            const updateData = {};

            if (exchange.magnuStarsoinsAmount !== undefined) {
                updateData.magnumCoinsAmount = exchange.magnuStarsoinsAmount;
                updateData.$unset = { ...updateData.$unset, magnuStarsoinsAmount: 1 };
            }

            if (exchange.magnuStarsoinsReceived !== undefined) {
                updateData.magnumCoinsReceived = exchange.magnuStarsoinsReceived;
                updateData.$unset = { ...updateData.$unset, magnuStarsoinsReceived: 1 };
            }

            if (Object.keys(updateData).length > 0) {
                await exchangeHistoryCollection.updateOne(
                    { _id: exchange._id },
                    updateData
                );
                console.log(`‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–º–µ–Ω–∞ ${exchange._id}`);
            }
        }

        // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏
        console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–∏–≥—Ä–∞—Ü–∏–∏...\n');

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ä—ã—Ö –ø–æ–ª–µ–π –±–æ–ª—å—à–µ –Ω–µ—Ç
        const remainingOldFields = await usersCollection.countDocuments({
            $or: [
                { magnuStarsoins: { $exists: true } },
                { totalEarnedMagnuStarsoins: { $exists: true } },
                { totalWithdrawnMagnuStarsoins: { $exists: true } }
            ]
        });

        if (remainingOldFields === 0) {
            console.log('‚úÖ –ú–∏–≥—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!');
        } else {
            console.log(`‚ö†Ô∏è  –û—Å—Ç–∞–ª–æ—Å—å ${remainingOldFields} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å–æ —Å—Ç–∞—Ä—ã–º–∏ –ø–æ–ª—è–º–∏`);
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω–æ–≤—ã–µ –ø–æ–ª—è –ø–æ—è–≤–∏–ª–∏—Å—å
        const usersWithNewFields = await usersCollection.countDocuments({
            magnumCoins: { $exists: true }
        });

        console.log(`üìä –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –Ω–æ–≤—ã–º–∏ –ø–æ–ª—è–º–∏: ${usersWithNewFields}`);

        // –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏
        console.log('\nüéâ –ú–∏–≥—Ä–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
        console.log('üìä –†–µ–∑—é–º–µ:');
        console.log(`   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${usersWithOldFields.length}`);
        console.log(`   ‚Ä¢ WebApp –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${webappUsersWithOldFields.length}`);
        console.log(`   ‚Ä¢ –†–µ–∑–µ—Ä–≤–æ–≤: ${reservesWithOldFields.length}`);
        console.log(`   ‚Ä¢ –ó–∞–ø–∏—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ –æ–±–º–µ–Ω–æ–≤: ${exchangeHistoryWithOldFields.length}`);

    } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –º–∏–≥—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:', error.message);
    } finally {
        await client.close();
    }
}

migrateDatabase();
